{"name":"FlightControl","tagline":"Chainable routing and middleware for Node.","body":"FlightControl\r\n=============\r\n\r\n- Provides regex- and string-based routing of requested URLs.\r\n- Parses HTTP query-string parameters and body parameters, exposed in handler callbacks as `this.vars`.\r\n- Allows for middleware, such as database queries or cookie parsing.\r\n- Has a simple chainable syntax.\r\n\r\nSetup\r\n-----\r\nYou will want to include the flight module. Most likely, you will set the imported value to a convenient name, like `app` which is used throughout our examples.\r\n\r\n```javascript\r\nvar app = require(\"./flight\");\r\n```\r\n\r\nRouting\r\n-------\r\nRouting is performed by use of `Flight#get`, `Flight#post`, etc. Usage is of the following form. \r\n\r\n```javascript\r\napp.get(*path*, *handler*[, *middleware*]).post(...)\r\n```\r\n\r\n*handler* is a function of request, response, and any passed values of the middleware. *middleware* is a function of *handler*, request, and response. The following is an example of this all working together.\r\n\r\n```javascript\r\napp.get('/', function(req, res, time) {\r\n  res.end(\"hi, it's \"+time+\".\");\r\n}, function(handler, req, res) {\r\n  handler((new Date()).getTime());\r\n});\r\n```\r\n\r\nRequest Variables\r\n-----------------\r\nRequest variables are exposed to handlers and middleware as *this.vars*. The following is an example of this at use.\r\n\r\n```javascript\r\napp.get(/^/, function(req, res) {\r\n  res.end(\"hi, \"+this.vars.name);\r\n});\r\n```\r\n\r\nRunning a Server\r\n----------------\r\n\r\n```javascript\r\nhttp.createServer(app).listen(8080);\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}